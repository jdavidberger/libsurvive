// NOTE: Auto-generated code; see tools/generate_reprojection_functions
#include <complex.h>
#include <linmath.h>
#include <math.h>
double __safe_asin(double x) { return asin(linmath_max(-1., linmath_min(1., x))); }
//double __safe_pow(double x, double y) { return x == 0 ? 0 : creal(cpow(x, y)); }
//#define pow __safe_pow
#define asin __safe_asin
static inline void gen_reproject_axis_x_jac_obj_p_axisangle(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh,
															FLT phase_0, FLT tilt_0, FLT curve_0, FLT gibPhase_0,
															FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = pow(lh_qi, 2);
	FLT x1 = pow(lh_qj, 2);
	FLT x2 = pow(lh_qk, 2);
	FLT x3 = x0 + x1 + x2;
	FLT x4 = sqrt(x3);
	FLT x5 = sin(x4) / x4;
	FLT x6 = lh_qj * x5;
	FLT x7 = cos(x4);
	FLT x8 = -x7;
	FLT x9 = (x8 + 1) / x3;
	FLT x10 = lh_qi * x9;
	FLT x11 = lh_qk * x10;
	FLT x12 = -x11 + x6;
	FLT x13 = lh_qk * x5;
	FLT x14 = lh_qj * x10;
	FLT x15 = x13 + x14;
	FLT x16 = pow(obj_qi, 2);
	FLT x17 = pow(obj_qj, 2);
	FLT x18 = pow(obj_qk, 2);
	FLT x19 = x16 + x17 + x18;
	FLT x20 = 1.0 / x19;
	FLT x21 = sqrt(x19);
	FLT x22 = cos(x21);
	FLT x23 = -x22 + 1;
	FLT x24 = x20 * x23;
	FLT x25 = sin(x21);
	FLT x26 = x25 / x21;
	FLT x27 = obj_qk * x26;
	FLT x28 = -x27;
	FLT x29 = obj_qj * x24;
	FLT x30 = obj_qi * x29;
	FLT x31 = obj_qj * x26;
	FLT x32 = obj_qk * x24;
	FLT x33 = obj_qi * x32;
	FLT x34 = obj_px + sensor_x * (x16 * x24 + x22) + sensor_y * (x28 + x30) + sensor_z * (x31 + x33);
	FLT x35 = x15 * x34;
	FLT x36 = x1 * x9 + x7;
	FLT x37 = obj_qi * x26;
	FLT x38 = -x37;
	FLT x39 = obj_qk * x29;
	FLT x40 = obj_py + sensor_x * (x27 + x30) + sensor_y * (x17 * x24 + x22) + sensor_z * (x38 + x39);
	FLT x41 = x36 * x40;
	FLT x42 = lh_qi * x5;
	FLT x43 = -x42;
	FLT x44 = lh_qj * lh_qk * x9;
	FLT x45 = x43 + x44;
	FLT x46 = -x31;
	FLT x47 = obj_pz + sensor_x * (x33 + x46) + sensor_y * (x37 + x39) + sensor_z * (x18 * x24 + x22);
	FLT x48 = x45 * x47;
	FLT x49 = lh_py + x35 + x41 + x48;
	FLT x50 = pow(x49, 2);
	FLT x51 = x40 * (x42 + x44);
	FLT x52 = x2 * x9;
	FLT x53 = x47 * (x52 + x7);
	FLT x54 = x34 * (x11 - x6);
	FLT x55 = -lh_pz - x51 - x53 - x54;
	FLT x56 = pow(x55, 2);
	FLT x57 = 2 / (x50 + x56);
	FLT x58 = x57 * (-lh_py - x35 - x41 - x48);
	FLT x59 = x55 * x57;
	FLT x60 = curve_0 * atan2(x49, x55);
	FLT x61 = x11 + x6;
	FLT x62 = x0 * x9;
	FLT x63 = x62 + x7;
	FLT x64 = -x13 + x14;
	FLT x65 = lh_px + x34 * x63 + x40 * x64 + x47 * x61;
	FLT x66 = x56 + pow(x65, 2);
	FLT x67 = 1.0 / x66;
	FLT x68 = tan(tilt_0);
	FLT x69 = pow(-x50 * x67 * pow(x68, 2) + 1, -1.0 / 2.0);
	FLT x70 = x68 / sqrt(x66);
	FLT x71 = 2 * x7;
	FLT x72 = (1.0 / 2.0) * x65;
	FLT x73 = 2 * x6;
	FLT x74 = 2 * x11;
	FLT x75 = (1.0 / 2.0) * x55;
	FLT x76 = x49 * x68 / pow(x66, 3.0 / 2.0);
	FLT x77 = x65 * x67;
	FLT x78 = x67 * (lh_pz + x51 + x53 + x54);
	FLT x79 = x12 * x77 + x63 * x78 - x69 * (x15 * x70 + x76 * (-x72 * (2 * x62 + x71) - x75 * (x73 - x74)));
	FLT x80 = gibMag_0 * sin(gibPhase_0 - phase_0 - asin(x49 * x70) + atan2(x55, x65));
	FLT x81 = x43 - x44;
	FLT x82 =
		x64 * x78 - x69 * (x36 * x70 + x76 * (-x72 * (-2 * x13 + 2 * x14) - x75 * (-2 * x42 - 2 * x44))) + x77 * x81;
	FLT x83 = -x52 + x8;
	FLT x84 = x61 * x78 - x69 * (x45 * x70 + x76 * (-x72 * (x73 + x74) - x75 * (-2 * x52 - x71))) + x77 * x83;
	FLT x85 = x25 / pow(x19, 3.0 / 2.0);
	FLT x86 = x16 * x85;
	FLT x87 = 2 * x23 / pow(x19, 2);
	FLT x88 = x16 * x87;
	FLT x89 = obj_qk * x86 - obj_qk * x88;
	FLT x90 = x32 + x89;
	FLT x91 = obj_qi * obj_qj;
	FLT x92 = x85 * x91;
	FLT x93 = x20 * x22;
	FLT x94 = x91 * x93;
	FLT x95 = x92 - x94;
	FLT x96 = x16 * x93;
	FLT x97 = obj_qi * obj_qk;
	FLT x98 = x85 * x97;
	FLT x99 = obj_qj * x87;
	FLT x100 = obj_qj * x98 - x97 * x99;
	FLT x101 = x100 + x26;
	FLT x102 = x18 * x85;
	FLT x103 = obj_qi * x87;
	FLT x104 = obj_qi * x102 - x103 * x18;
	FLT x105 = sensor_x * (x90 + x95) + sensor_y * (x101 - x86 + x96) + sensor_z * (x104 + x38);
	FLT x106 = x105 * x83;
	FLT x107 = pow(obj_qi, 3);
	FLT x108 = obj_qi * x24;
	FLT x109 = obj_qj * x86 - obj_qj * x88;
	FLT x110 = x109 + x29;
	FLT x111 = x93 * x97;
	FLT x112 = -x111 + x98;
	FLT x113 = -x92 + x94;
	FLT x114 =
		sensor_x * (x107 * x85 - x107 * x87 + 2 * x108 + x38) + sensor_y * (x110 + x112) + sensor_z * (x113 + x90);
	FLT x115 = x114 * x12;
	FLT x116 = x111 - x98;
	FLT x117 = x17 * x85;
	FLT x118 = obj_qi * x117 - x103 * x17;
	FLT x119 = x100 - x26;
	FLT x120 = sensor_x * (x110 + x116) + sensor_y * (x118 + x38) + sensor_z * (x119 + x86 - x96);
	FLT x121 = x120 * x81;
	FLT x122 = x106 + x115 + x121;
	FLT x123 = x105 * x45 + x114 * x15 + x120 * x36;
	FLT x124 = x105 * x61;
	FLT x125 = x114 * x63;
	FLT x126 = x120 * x64;
	FLT x127 =
		x122 * x77 -
		x69 * (x123 * x70 + x76 * (-x72 * (2 * x124 + 2 * x125 + 2 * x126) - x75 * (2 * x106 + 2 * x115 + 2 * x121))) +
		x78 * (x124 + x125 + x126);
	FLT x128 = x17 * x93;
	FLT x129 = obj_qk * x117 - obj_qk * x17 * x87;
	FLT x130 = x129 + x32;
	FLT x131 = obj_qj * x102 - x18 * x99;
	FLT x132 = sensor_x * (x117 + x119 - x128) + sensor_y * (x113 + x130) + sensor_z * (x131 + x46);
	FLT x133 = x132 * x83;
	FLT x134 = x108 + x118;
	FLT x135 = obj_qj * obj_qk;
	FLT x136 = x135 * x85;
	FLT x137 = x135 * x93;
	FLT x138 = x136 - x137;
	FLT x139 = sensor_x * (x109 + x46) + sensor_y * (x134 + x138) + sensor_z * (x101 - x117 + x128);
	FLT x140 = x12 * x139;
	FLT x141 = -x136 + x137;
	FLT x142 = pow(obj_qj, 3);
	FLT x143 =
		sensor_x * (x134 + x141) + sensor_y * (x142 * x85 - x142 * x87 + 2 * x29 + x46) + sensor_z * (x130 + x95);
	FLT x144 = x143 * x81;
	FLT x145 = x133 + x140 + x144;
	FLT x146 = x132 * x45 + x139 * x15 + x143 * x36;
	FLT x147 = x132 * x61;
	FLT x148 = x139 * x63;
	FLT x149 = x143 * x64;
	FLT x150 =
		x145 * x77 -
		x69 * (x146 * x70 + x76 * (-x72 * (2 * x147 + 2 * x148 + 2 * x149) - x75 * (2 * x133 + 2 * x140 + 2 * x144))) +
		x78 * (x147 + x148 + x149);
	FLT x151 = x104 + x108;
	FLT x152 = x131 + x29;
	FLT x153 = pow(obj_qk, 3);
	FLT x154 =
		sensor_x * (x138 + x151) + sensor_y * (x116 + x152) + sensor_z * (x153 * x85 - x153 * x87 + x28 + 2 * x32);
	FLT x155 = x154 * x83;
	FLT x156 = x18 * x93;
	FLT x157 = sensor_x * (x28 + x89) + sensor_y * (x102 + x119 - x156) + sensor_z * (x141 + x151);
	FLT x158 = x12 * x157;
	FLT x159 = sensor_x * (x101 - x102 + x156) + sensor_y * (x129 + x28) + sensor_z * (x112 + x152);
	FLT x160 = x159 * x81;
	FLT x161 = x155 + x158 + x160;
	FLT x162 = x15 * x157 + x154 * x45 + x159 * x36;
	FLT x163 = x154 * x61;
	FLT x164 = x157 * x63;
	FLT x165 = x159 * x64;
	FLT x166 =
		x161 * x77 -
		x69 * (x162 * x70 + x76 * (-x72 * (2 * x163 + 2 * x164 + 2 * x165) - x75 * (2 * x155 + 2 * x158 + 2 * x160))) +
		x78 * (x163 + x164 + x165);
	*(out++) = x60 * (x12 * x58 + x15 * x59) + x79 * x80 + x79;
	*(out++) = x60 * (x36 * x59 + x58 * x81) + x80 * x82 + x82;
	*(out++) = x60 * (x45 * x59 + x58 * x83) + x80 * x84 + x84;
	*(out++) = x127 * x80 + x127 + x60 * (x122 * x58 + x123 * x59);
	*(out++) = x150 * x80 + x150 + x60 * (x145 * x58 + x146 * x59);
	*(out++) = x166 * x80 + x166 + x60 * (x161 * x58 + x162 * x59);
}

static inline void gen_reproject_axis_y_jac_obj_p_axisangle(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh,
															FLT phase_0, FLT tilt_0, FLT curve_0, FLT gibPhase_0,
															FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = pow(lh_qi, 2);
	FLT x1 = pow(lh_qj, 2);
	FLT x2 = pow(lh_qk, 2);
	FLT x3 = x0 + x1 + x2;
	FLT x4 = sqrt(x3);
	FLT x5 = sin(x4) / x4;
	FLT x6 = lh_qj * x5;
	FLT x7 = cos(x4);
	FLT x8 = -x7;
	FLT x9 = (x8 + 1) / x3;
	FLT x10 = lh_qi * lh_qk * x9;
	FLT x11 = -x10 + x6;
	FLT x12 = x10 + x6;
	FLT x13 = pow(obj_qi, 2);
	FLT x14 = pow(obj_qj, 2);
	FLT x15 = pow(obj_qk, 2);
	FLT x16 = x13 + x14 + x15;
	FLT x17 = sqrt(x16);
	FLT x18 = sin(x17);
	FLT x19 = x18 / x17;
	FLT x20 = obj_qj * x19;
	FLT x21 = -x20;
	FLT x22 = 1.0 / x16;
	FLT x23 = cos(x17);
	FLT x24 = -x23 + 1;
	FLT x25 = x22 * x24;
	FLT x26 = obj_qk * x25;
	FLT x27 = obj_qi * x26;
	FLT x28 = obj_qi * x19;
	FLT x29 = obj_qj * x26;
	FLT x30 = obj_pz + sensor_x * (x21 + x27) + sensor_y * (x28 + x29) + sensor_z * (x15 * x25 + x23);
	FLT x31 = x12 * x30;
	FLT x32 = x0 * x9 + x7;
	FLT x33 = obj_qk * x19;
	FLT x34 = -x33;
	FLT x35 = obj_qj * x25;
	FLT x36 = obj_qi * x35;
	FLT x37 = obj_px + sensor_x * (x13 * x25 + x23) + sensor_y * (x34 + x36) + sensor_z * (x20 + x27);
	FLT x38 = x32 * x37;
	FLT x39 = lh_qk * x5;
	FLT x40 = -x39;
	FLT x41 = lh_qj * x9;
	FLT x42 = lh_qi * x41;
	FLT x43 = x40 + x42;
	FLT x44 = -x28;
	FLT x45 = obj_py + sensor_x * (x33 + x36) + sensor_y * (x14 * x25 + x23) + sensor_z * (x29 + x44);
	FLT x46 = x43 * x45;
	FLT x47 = lh_px + x31 + x38 + x46;
	FLT x48 = pow(x47, 2);
	FLT x49 = lh_qi * x5;
	FLT x50 = lh_qk * x41;
	FLT x51 = x45 * (x49 + x50);
	FLT x52 = x2 * x9;
	FLT x53 = x30 * (x52 + x7);
	FLT x54 = x37 * (x10 - x6);
	FLT x55 = -lh_pz - x51 - x53 - x54;
	FLT x56 = pow(x55, 2);
	FLT x57 = 2 / (x48 + x56);
	FLT x58 = x57 * (-lh_px - x31 - x38 - x46);
	FLT x59 = x55 * x57;
	FLT x60 = curve_0 * atan2(x47, x55);
	FLT x61 = x1 * x9;
	FLT x62 = -x49;
	FLT x63 = -lh_py - x30 * (x50 + x62) - x37 * (x39 + x42) - x45 * (x61 + x7);
	FLT x64 = x56 + pow(x63, 2);
	FLT x65 = 1.0 / x64;
	FLT x66 = tan(tilt_0);
	FLT x67 = pow(-x48 * x65 * pow(x66, 2) + 1, -1.0 / 2.0);
	FLT x68 = x66 / sqrt(x64);
	FLT x69 = (1.0 / 2.0) * x63;
	FLT x70 = (1.0 / 2.0) * x55;
	FLT x71 = x47 * x66 / pow(x64, 3.0 / 2.0);
	FLT x72 = x63 * x65;
	FLT x73 = x40 - x42;
	FLT x74 = x65 * (lh_pz + x51 + x53 + x54);
	FLT x75 =
		x11 * x72 - x67 * (x32 * x68 + x71 * (-x69 * (-2 * x39 - 2 * x42) - x70 * (-2 * x10 + 2 * x6))) + x73 * x74;
	FLT x76 = gibMag_0 * sin(gibPhase_0 - phase_0 - asin(x47 * x68) + atan2(x55, x63));
	FLT x77 = -x50;
	FLT x78 = x62 + x77;
	FLT x79 = -2 * x7;
	FLT x80 = 2 * x49;
	FLT x81 = -2 * x50;
	FLT x82 = -x61 + x8;
	FLT x83 = -x67 * (x43 * x68 + x71 * (-x69 * (-2 * x61 + x79) - x70 * (-x80 + x81))) + x72 * x78 + x74 * x82;
	FLT x84 = -x52 + x8;
	FLT x85 = x49 + x77;
	FLT x86 = -x67 * (x12 * x68 + x71 * (-x69 * (x80 + x81) - x70 * (-2 * x52 + x79))) + x72 * x84 + x74 * x85;
	FLT x87 = x18 / pow(x16, 3.0 / 2.0);
	FLT x88 = x13 * x87;
	FLT x89 = 2 * x24 / pow(x16, 2);
	FLT x90 = x13 * x89;
	FLT x91 = obj_qk * x88 - obj_qk * x90;
	FLT x92 = x26 + x91;
	FLT x93 = obj_qi * obj_qj;
	FLT x94 = x87 * x93;
	FLT x95 = x22 * x23;
	FLT x96 = x93 * x95;
	FLT x97 = x94 - x96;
	FLT x98 = x13 * x95;
	FLT x99 = obj_qk * x89;
	FLT x100 = obj_qk * x94 - x93 * x99;
	FLT x101 = x100 + x19;
	FLT x102 = x15 * x87;
	FLT x103 = obj_qi * x89;
	FLT x104 = obj_qi * x102 - x103 * x15;
	FLT x105 = sensor_x * (x92 + x97) + sensor_y * (x101 - x88 + x98) + sensor_z * (x104 + x44);
	FLT x106 = x105 * x84;
	FLT x107 = pow(obj_qi, 3);
	FLT x108 = obj_qi * x25;
	FLT x109 = obj_qj * x88 - obj_qj * x90;
	FLT x110 = x109 + x35;
	FLT x111 = obj_qi * obj_qk;
	FLT x112 = x111 * x87;
	FLT x113 = x111 * x95;
	FLT x114 = x112 - x113;
	FLT x115 = -x94 + x96;
	FLT x116 =
		sensor_x * (x107 * x87 - x107 * x89 + 2 * x108 + x44) + sensor_y * (x110 + x114) + sensor_z * (x115 + x92);
	FLT x117 = x11 * x116;
	FLT x118 = -x112 + x113;
	FLT x119 = x14 * x87;
	FLT x120 = obj_qi * x119 - x103 * x14;
	FLT x121 = x100 - x19;
	FLT x122 = sensor_x * (x110 + x118) + sensor_y * (x120 + x44) + sensor_z * (x121 + x88 - x98);
	FLT x123 = x122 * x78;
	FLT x124 = x106 + x117 + x123;
	FLT x125 = x105 * x12 + x116 * x32 + x122 * x43;
	FLT x126 = x122 * x82;
	FLT x127 = x105 * x85;
	FLT x128 = x116 * x73;
	FLT x129 =
		x124 * x72 -
		x67 * (x125 * x68 + x71 * (-x69 * (2 * x126 + 2 * x127 + 2 * x128) - x70 * (2 * x106 + 2 * x117 + 2 * x123))) +
		x74 * (x126 + x127 + x128);
	FLT x130 = x14 * x95;
	FLT x131 = obj_qk * x119 - x14 * x99;
	FLT x132 = x131 + x26;
	FLT x133 = obj_qj * x102 - obj_qj * x15 * x89;
	FLT x134 = sensor_x * (x119 + x121 - x130) + sensor_y * (x115 + x132) + sensor_z * (x133 + x21);
	FLT x135 = x134 * x84;
	FLT x136 = x108 + x120;
	FLT x137 = obj_qj * obj_qk;
	FLT x138 = x137 * x87;
	FLT x139 = x137 * x95;
	FLT x140 = x138 - x139;
	FLT x141 = sensor_x * (x109 + x21) + sensor_y * (x136 + x140) + sensor_z * (x101 - x119 + x130);
	FLT x142 = x11 * x141;
	FLT x143 = -x138 + x139;
	FLT x144 = pow(obj_qj, 3);
	FLT x145 =
		sensor_x * (x136 + x143) + sensor_y * (x144 * x87 - x144 * x89 + x21 + 2 * x35) + sensor_z * (x132 + x97);
	FLT x146 = x145 * x78;
	FLT x147 = x135 + x142 + x146;
	FLT x148 = x12 * x134 + x141 * x32 + x145 * x43;
	FLT x149 = x145 * x82;
	FLT x150 = x134 * x85;
	FLT x151 = x141 * x73;
	FLT x152 =
		x147 * x72 -
		x67 * (x148 * x68 + x71 * (-x69 * (2 * x149 + 2 * x150 + 2 * x151) - x70 * (2 * x135 + 2 * x142 + 2 * x146))) +
		x74 * (x149 + x150 + x151);
	FLT x153 = x104 + x108;
	FLT x154 = x133 + x35;
	FLT x155 = pow(obj_qk, 3);
	FLT x156 =
		sensor_x * (x140 + x153) + sensor_y * (x118 + x154) + sensor_z * (x155 * x87 - x155 * x89 + 2 * x26 + x34);
	FLT x157 = x156 * x84;
	FLT x158 = x15 * x95;
	FLT x159 = sensor_x * (x34 + x91) + sensor_y * (x102 + x121 - x158) + sensor_z * (x143 + x153);
	FLT x160 = x11 * x159;
	FLT x161 = sensor_x * (x101 - x102 + x158) + sensor_y * (x131 + x34) + sensor_z * (x114 + x154);
	FLT x162 = x161 * x78;
	FLT x163 = x157 + x160 + x162;
	FLT x164 = x12 * x156 + x159 * x32 + x161 * x43;
	FLT x165 = x161 * x82;
	FLT x166 = x156 * x85;
	FLT x167 = x159 * x73;
	FLT x168 =
		x163 * x72 -
		x67 * (x164 * x68 + x71 * (-x69 * (2 * x165 + 2 * x166 + 2 * x167) - x70 * (2 * x157 + 2 * x160 + 2 * x162))) +
		x74 * (x165 + x166 + x167);
	*(out++) = x60 * (x11 * x58 + x32 * x59) + x75 * x76 + x75;
	*(out++) = x60 * (x43 * x59 + x58 * x78) + x76 * x83 + x83;
	*(out++) = x60 * (x12 * x59 + x58 * x84) + x76 * x86 + x86;
	*(out++) = x129 * x76 + x129 + x60 * (x124 * x58 + x125 * x59);
	*(out++) = x152 * x76 + x152 + x60 * (x147 * x58 + x148 * x59);
	*(out++) = x168 * x76 + x168 + x60 * (x163 * x58 + x164 * x59);
}

static inline void gen_reproject_jac_obj_p_axisangle(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh,
													 FLT phase_0, FLT phase_1, FLT tilt_0, FLT tilt_1, FLT curve_0,
													 FLT curve_1, FLT gibPhase_0, FLT gibPhase_1, FLT gibMag_0,
													 FLT gibMag_1) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = pow(lh_qi, 2);
	FLT x1 = pow(lh_qj, 2);
	FLT x2 = pow(lh_qk, 2);
	FLT x3 = x0 + x1 + x2;
	FLT x4 = sqrt(x3);
	FLT x5 = sin(x4) / x4;
	FLT x6 = lh_qj * x5;
	FLT x7 = cos(x4);
	FLT x8 = -x7;
	FLT x9 = (x8 + 1) / x3;
	FLT x10 = lh_qi * x9;
	FLT x11 = lh_qk * x10;
	FLT x12 = -x11 + x6;
	FLT x13 = lh_qk * x5;
	FLT x14 = lh_qj * x10;
	FLT x15 = x13 + x14;
	FLT x16 = pow(obj_qi, 2);
	FLT x17 = pow(obj_qj, 2);
	FLT x18 = pow(obj_qk, 2);
	FLT x19 = x16 + x17 + x18;
	FLT x20 = 1.0 / x19;
	FLT x21 = sqrt(x19);
	FLT x22 = cos(x21);
	FLT x23 = -x22 + 1;
	FLT x24 = x20 * x23;
	FLT x25 = sin(x21);
	FLT x26 = x25 / x21;
	FLT x27 = obj_qk * x26;
	FLT x28 = -x27;
	FLT x29 = obj_qj * x24;
	FLT x30 = obj_qi * x29;
	FLT x31 = obj_qj * x26;
	FLT x32 = obj_qk * x24;
	FLT x33 = obj_qi * x32;
	FLT x34 = obj_px + sensor_x * (x16 * x24 + x22) + sensor_y * (x28 + x30) + sensor_z * (x31 + x33);
	FLT x35 = x15 * x34;
	FLT x36 = x1 * x9;
	FLT x37 = x36 + x7;
	FLT x38 = obj_qi * x26;
	FLT x39 = -x38;
	FLT x40 = obj_qk * x29;
	FLT x41 = obj_py + sensor_x * (x27 + x30) + sensor_y * (x17 * x24 + x22) + sensor_z * (x39 + x40);
	FLT x42 = x37 * x41;
	FLT x43 = lh_qi * x5;
	FLT x44 = -x43;
	FLT x45 = lh_qj * lh_qk * x9;
	FLT x46 = x44 + x45;
	FLT x47 = -x31;
	FLT x48 = obj_pz + sensor_x * (x33 + x47) + sensor_y * (x38 + x40) + sensor_z * (x18 * x24 + x22);
	FLT x49 = x46 * x48;
	FLT x50 = -lh_py - x35 - x42 - x49;
	FLT x51 = lh_py + x35 + x42 + x49;
	FLT x52 = pow(x51, 2);
	FLT x53 = x41 * (x43 + x45);
	FLT x54 = x2 * x9;
	FLT x55 = x48 * (x54 + x7);
	FLT x56 = x34 * (x11 - x6);
	FLT x57 = -lh_pz - x53 - x55 - x56;
	FLT x58 = pow(x57, 2);
	FLT x59 = 2 / (x52 + x58);
	FLT x60 = x50 * x59;
	FLT x61 = x57 * x59;
	FLT x62 = curve_0 * atan2(x51, x57);
	FLT x63 = x11 + x6;
	FLT x64 = x48 * x63;
	FLT x65 = x0 * x9;
	FLT x66 = x65 + x7;
	FLT x67 = x34 * x66;
	FLT x68 = -x13;
	FLT x69 = x14 + x68;
	FLT x70 = x41 * x69;
	FLT x71 = lh_px + x64 + x67 + x70;
	FLT x72 = pow(x71, 2);
	FLT x73 = x58 + x72;
	FLT x74 = 1.0 / x73;
	FLT x75 = tan(tilt_0);
	FLT x76 = pow(-x52 * x74 * pow(x75, 2) + 1, -1.0 / 2.0);
	FLT x77 = x75 / sqrt(x73);
	FLT x78 = 2 * x7;
	FLT x79 = (1.0 / 2.0) * x71;
	FLT x80 = 2 * x6;
	FLT x81 = 2 * x11;
	FLT x82 = (1.0 / 2.0) * x57;
	FLT x83 = -x82 * (x80 - x81);
	FLT x84 = x51 * x75 / pow(x73, 3.0 / 2.0);
	FLT x85 = x71 * x74;
	FLT x86 = lh_pz + x53 + x55 + x56;
	FLT x87 = x74 * x86;
	FLT x88 = x12 * x85 + x66 * x87 - x76 * (x15 * x77 + x84 * (-x79 * (2 * x65 + x78) + x83));
	FLT x89 = gibMag_0 * sin(gibPhase_0 - phase_0 - asin(x51 * x77) + atan2(x57, x71));
	FLT x90 = -x45;
	FLT x91 = x44 + x90;
	FLT x92 = 2 * x43;
	FLT x93 = -2 * x45;
	FLT x94 = -x82 * (-x92 + x93);
	FLT x95 = -2 * x13;
	FLT x96 = 2 * x14;
	FLT x97 = x69 * x87 - x76 * (x37 * x77 + x84 * (-x79 * (x95 + x96) + x94)) + x85 * x91;
	FLT x98 = -x54 + x8;
	FLT x99 = -x78;
	FLT x100 = -x82 * (-2 * x54 + x99);
	FLT x101 = x63 * x87 - x76 * (x46 * x77 + x84 * (x100 - x79 * (x80 + x81))) + x85 * x98;
	FLT x102 = x25 / pow(x19, 3.0 / 2.0);
	FLT x103 = x102 * x16;
	FLT x104 = 2 * x23 / pow(x19, 2);
	FLT x105 = x104 * x16;
	FLT x106 = obj_qk * x103 - obj_qk * x105;
	FLT x107 = x106 + x32;
	FLT x108 = obj_qi * obj_qj;
	FLT x109 = x102 * x108;
	FLT x110 = x20 * x22;
	FLT x111 = x108 * x110;
	FLT x112 = x109 - x111;
	FLT x113 = x110 * x16;
	FLT x114 = obj_qi * obj_qk;
	FLT x115 = x102 * x114;
	FLT x116 = obj_qj * x104;
	FLT x117 = obj_qj * x115 - x114 * x116;
	FLT x118 = x117 + x26;
	FLT x119 = x102 * x18;
	FLT x120 = obj_qi * x104;
	FLT x121 = obj_qi * x119 - x120 * x18;
	FLT x122 = sensor_x * (x107 + x112) + sensor_y * (-x103 + x113 + x118) + sensor_z * (x121 + x39);
	FLT x123 = x122 * x98;
	FLT x124 = pow(obj_qi, 3);
	FLT x125 = obj_qi * x24;
	FLT x126 = obj_qj * x103 - obj_qj * x105;
	FLT x127 = x126 + x29;
	FLT x128 = x110 * x114;
	FLT x129 = x115 - x128;
	FLT x130 = -x109 + x111;
	FLT x131 =
		sensor_x * (x102 * x124 - x104 * x124 + 2 * x125 + x39) + sensor_y * (x127 + x129) + sensor_z * (x107 + x130);
	FLT x132 = x12 * x131;
	FLT x133 = -x115 + x128;
	FLT x134 = x102 * x17;
	FLT x135 = obj_qi * x134 - x120 * x17;
	FLT x136 = x117 - x26;
	FLT x137 = sensor_x * (x127 + x133) + sensor_y * (x135 + x39) + sensor_z * (x103 - x113 + x136);
	FLT x138 = x137 * x91;
	FLT x139 = x123 + x132 + x138;
	FLT x140 = x122 * x46 + x131 * x15 + x137 * x37;
	FLT x141 = -x82 * (2 * x123 + 2 * x132 + 2 * x138);
	FLT x142 = x122 * x63;
	FLT x143 = x131 * x66;
	FLT x144 = x137 * x69;
	FLT x145 = x142 + x143 + x144;
	FLT x146 = x139 * x85 + x145 * x87 - x76 * (x140 * x77 + x84 * (x141 - x79 * (2 * x142 + 2 * x143 + 2 * x144)));
	FLT x147 = x110 * x17;
	FLT x148 = -obj_qk * x104 * x17 + obj_qk * x134;
	FLT x149 = x148 + x32;
	FLT x150 = obj_qj * x119 - x116 * x18;
	FLT x151 = sensor_x * (x134 + x136 - x147) + sensor_y * (x130 + x149) + sensor_z * (x150 + x47);
	FLT x152 = x151 * x98;
	FLT x153 = x125 + x135;
	FLT x154 = obj_qj * obj_qk;
	FLT x155 = x102 * x154;
	FLT x156 = x110 * x154;
	FLT x157 = x155 - x156;
	FLT x158 = sensor_x * (x126 + x47) + sensor_y * (x153 + x157) + sensor_z * (x118 - x134 + x147);
	FLT x159 = x12 * x158;
	FLT x160 = -x155 + x156;
	FLT x161 = pow(obj_qj, 3);
	FLT x162 =
		sensor_x * (x153 + x160) + sensor_y * (x102 * x161 - x104 * x161 + 2 * x29 + x47) + sensor_z * (x112 + x149);
	FLT x163 = x162 * x91;
	FLT x164 = x152 + x159 + x163;
	FLT x165 = x15 * x158 + x151 * x46 + x162 * x37;
	FLT x166 = -x82 * (2 * x152 + 2 * x159 + 2 * x163);
	FLT x167 = x151 * x63;
	FLT x168 = x158 * x66;
	FLT x169 = x162 * x69;
	FLT x170 = x167 + x168 + x169;
	FLT x171 = x164 * x85 + x170 * x87 - x76 * (x165 * x77 + x84 * (x166 - x79 * (2 * x167 + 2 * x168 + 2 * x169)));
	FLT x172 = x121 + x125;
	FLT x173 = x150 + x29;
	FLT x174 = pow(obj_qk, 3);
	FLT x175 =
		sensor_x * (x157 + x172) + sensor_y * (x133 + x173) + sensor_z * (x102 * x174 - x104 * x174 + x28 + 2 * x32);
	FLT x176 = x175 * x98;
	FLT x177 = x110 * x18;
	FLT x178 = sensor_x * (x106 + x28) + sensor_y * (x119 + x136 - x177) + sensor_z * (x160 + x172);
	FLT x179 = x12 * x178;
	FLT x180 = sensor_x * (x118 - x119 + x177) + sensor_y * (x148 + x28) + sensor_z * (x129 + x173);
	FLT x181 = x180 * x91;
	FLT x182 = x176 + x179 + x181;
	FLT x183 = x15 * x178 + x175 * x46 + x180 * x37;
	FLT x184 = -x82 * (2 * x176 + 2 * x179 + 2 * x181);
	FLT x185 = x175 * x63;
	FLT x186 = x178 * x66;
	FLT x187 = x180 * x69;
	FLT x188 = x185 + x186 + x187;
	FLT x189 = x182 * x85 + x188 * x87 - x76 * (x183 * x77 + x84 * (x184 - x79 * (2 * x185 + 2 * x186 + 2 * x187)));
	FLT x190 = 2 * x74;
	FLT x191 = x190 * (-lh_px - x64 - x67 - x70);
	FLT x192 = x190 * x57;
	FLT x193 = curve_1 * atan2(x71, x57);
	FLT x194 = pow(x50, 2) + x58;
	FLT x195 = 1.0 / x194;
	FLT x196 = tan(tilt_1);
	FLT x197 = pow(-x195 * pow(x196, 2) * x72 + 1, -1.0 / 2.0);
	FLT x198 = x196 / sqrt(x194);
	FLT x199 = (1.0 / 2.0) * x50;
	FLT x200 = x196 * x71 / pow(x194, 3.0 / 2.0);
	FLT x201 = x195 * x50;
	FLT x202 = -x14 + x68;
	FLT x203 = x195 * x86;
	FLT x204 = x12 * x201 - x197 * (x198 * x66 + x200 * (-x199 * (x95 - x96) + x83)) + x202 * x203;
	FLT x205 = gibMag_1 * sin(gibPhase_1 - phase_1 - asin(x198 * x71) + atan2(x57, x50));
	FLT x206 = -x36 + x8;
	FLT x207 = -x197 * (x198 * x69 + x200 * (-x199 * (-2 * x36 + x99) + x94)) + x201 * x91 + x203 * x206;
	FLT x208 = x43 + x90;
	FLT x209 = -x197 * (x198 * x63 + x200 * (x100 - x199 * (x92 + x93))) + x201 * x98 + x203 * x208;
	FLT x210 = x137 * x206;
	FLT x211 = x122 * x208;
	FLT x212 = x131 * x202;
	FLT x213 = x139 * x201 - x197 * (x145 * x198 + x200 * (x141 - x199 * (2 * x210 + 2 * x211 + 2 * x212))) +
			   x203 * (x210 + x211 + x212);
	FLT x214 = x162 * x206;
	FLT x215 = x151 * x208;
	FLT x216 = x158 * x202;
	FLT x217 = x164 * x201 - x197 * (x170 * x198 + x200 * (x166 - x199 * (2 * x214 + 2 * x215 + 2 * x216))) +
			   x203 * (x214 + x215 + x216);
	FLT x218 = x180 * x206;
	FLT x219 = x175 * x208;
	FLT x220 = x178 * x202;
	FLT x221 = x182 * x201 - x197 * (x188 * x198 + x200 * (x184 - x199 * (2 * x218 + 2 * x219 + 2 * x220))) +
			   x203 * (x218 + x219 + x220);
	*(out++) = x62 * (x12 * x60 + x15 * x61) + x88 * x89 + x88;
	*(out++) = x62 * (x37 * x61 + x60 * x91) + x89 * x97 + x97;
	*(out++) = x101 * x89 + x101 + x62 * (x46 * x61 + x60 * x98);
	*(out++) = x146 * x89 + x146 + x62 * (x139 * x60 + x140 * x61);
	*(out++) = x171 * x89 + x171 + x62 * (x164 * x60 + x165 * x61);
	*(out++) = x189 * x89 + x189 + x62 * (x182 * x60 + x183 * x61);
	*(out++) = x193 * (x12 * x191 + x192 * x66) + x204 * x205 + x204;
	*(out++) = x193 * (x191 * x91 + x192 * x69) + x205 * x207 + x207;
	*(out++) = x193 * (x191 * x98 + x192 * x63) + x205 * x209 + x209;
	*(out++) = x193 * (x139 * x191 + x145 * x192) + x205 * x213 + x213;
	*(out++) = x193 * (x164 * x191 + x170 * x192) + x205 * x217 + x217;
	*(out++) = x193 * (x182 * x191 + x188 * x192) + x205 * x221 + x221;
}

static inline void gen_reproject_jac_obj_p(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh, FLT phase_0,
										   FLT phase_1, FLT tilt_0, FLT tilt_1, FLT curve_0, FLT curve_1,
										   FLT gibPhase_0, FLT gibPhase_1, FLT gibMag_0, FLT gibMag_1) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = lh_qi * lh_qk;
	FLT x1 = lh_qj * lh_qw;
	FLT x2 = x0 - x1;
	FLT x3 = pow(lh_qi, 2);
	FLT x4 = pow(lh_qj, 2);
	FLT x5 = pow(lh_qk, 2);
	FLT x6 = x4 + x5;
	FLT x7 = sqrt(pow(lh_qw, 2) + x3 + x6);
	FLT x8 = 4 * x7;
	FLT x9 = x2 * x8;
	FLT x10 = x3 + x5;
	FLT x11 = 2 * x7;
	FLT x12 = x10 * x11;
	FLT x13 = -x12 + 1;
	FLT x14 = pow(obj_qi, 2);
	FLT x15 = pow(obj_qk, 2);
	FLT x16 = x14 + x15;
	FLT x17 = pow(obj_qj, 2);
	FLT x18 = x15 + x17;
	FLT x19 = sqrt(pow(obj_qw, 2) + x14 + x18);
	FLT x20 = 2 * x19;
	FLT x21 = obj_qi * obj_qj;
	FLT x22 = obj_qk * obj_qw;
	FLT x23 = x21 + x22;
	FLT x24 = sensor_x * x20;
	FLT x25 = obj_qj * obj_qk;
	FLT x26 = obj_qi * obj_qw;
	FLT x27 = x25 - x26;
	FLT x28 = sensor_z * x20;
	FLT x29 = obj_py + sensor_y * (-x16 * x20 + 1) + x23 * x24 + x27 * x28;
	FLT x30 = x13 * x29;
	FLT x31 = lh_qi * lh_qj;
	FLT x32 = lh_qk * lh_qw;
	FLT x33 = x31 + x32;
	FLT x34 = x21 - x22;
	FLT x35 = sensor_y * x20;
	FLT x36 = obj_qi * obj_qk;
	FLT x37 = obj_qj * obj_qw;
	FLT x38 = x36 + x37;
	FLT x39 = obj_px + sensor_x * (-x18 * x20 + 1) + x28 * x38 + x34 * x35;
	FLT x40 = x11 * x39;
	FLT x41 = x33 * x40;
	FLT x42 = lh_qj * lh_qk;
	FLT x43 = lh_qi * lh_qw;
	FLT x44 = x42 - x43;
	FLT x45 = x14 + x17;
	FLT x46 = x36 - x37;
	FLT x47 = x25 + x26;
	FLT x48 = obj_pz + sensor_z * (-x20 * x45 + 1) + x24 * x46 + x35 * x47;
	FLT x49 = x11 * x48;
	FLT x50 = x44 * x49;
	FLT x51 = -lh_py - x30 - x41 - x50;
	FLT x52 = lh_py + x30 + x41 + x50;
	FLT x53 = pow(x52, 2);
	FLT x54 = x3 + x4;
	FLT x55 = x11 * x54;
	FLT x56 = x48 * (-x55 + 1);
	FLT x57 = x2 * x40;
	FLT x58 = x42 + x43;
	FLT x59 = x11 * x29;
	FLT x60 = x58 * x59;
	FLT x61 = -lh_pz - x56 - x57 - x60;
	FLT x62 = pow(x61, 2);
	FLT x63 = 1.0 / (x53 + x62);
	FLT x64 = x51 * x63;
	FLT x65 = x33 * x8;
	FLT x66 = x61 * x63;
	FLT x67 = curve_0 * atan2(x52, x61);
	FLT x68 = -x11 * x6 + 1;
	FLT x69 = x39 * x68;
	FLT x70 = x31 - x32;
	FLT x71 = x59 * x70;
	FLT x72 = x0 + x1;
	FLT x73 = x49 * x72;
	FLT x74 = lh_px + x69 + x71 + x73;
	FLT x75 = pow(x74, 2);
	FLT x76 = x62 + x75;
	FLT x77 = 1.0 / x76;
	FLT x78 = tan(tilt_0);
	FLT x79 = pow(-x53 * x77 * pow(x78, 2) + 1, -1.0 / 2.0);
	FLT x80 = (1.0 / 2.0) * x74;
	FLT x81 = x11 * x61;
	FLT x82 = x2 * x81;
	FLT x83 = x52 * x78 / pow(x76, 3.0 / 2.0);
	FLT x84 = x78 / sqrt(x76);
	FLT x85 = x11 * x84;
	FLT x86 = lh_pz + x56 + x57 + x60;
	FLT x87 = x77 * x86;
	FLT x88 = x74 * x77;
	FLT x89 = x11 * x88;
	FLT x90 = -x2 * x89 + x68 * x87 - x79 * (x33 * x85 + x83 * (-x80 * (-x6 * x8 + 2) + x82));
	FLT x91 = gibMag_0 * sin(gibPhase_0 - phase_0 - asin(x52 * x84) + atan2(x61, x74));
	FLT x92 = 2 * x63;
	FLT x93 = x61 * x92;
	FLT x94 = x58 * x8;
	FLT x95 = x11 * x74;
	FLT x96 = x58 * x81;
	FLT x97 = x11 * x87;
	FLT x98 = -x58 * x89 + x70 * x97 - x79 * (x13 * x84 + x83 * (-x70 * x95 + x96));
	FLT x99 = x55 - 1;
	FLT x100 = x51 * x92;
	FLT x101 = x44 * x8;
	FLT x102 = (1.0 / 2.0) * x61;
	FLT x103 = -x102 * (x54 * x8 - 2);
	FLT x104 = x72 * x97 - x79 * (x44 * x85 + x83 * (x103 - x72 * x95)) + x88 * x99;
	FLT x105 = obj_qi * x28;
	FLT x106 = obj_qk * x24;
	FLT x107 = 1.0 / x19;
	FLT x108 = obj_qw * x107;
	FLT x109 = -2 * x14;
	FLT x110 = -2 * x15;
	FLT x111 = sensor_y * (x109 + x110);
	FLT x112 = 2 * x108;
	FLT x113 = sensor_x * x23;
	FLT x114 = sensor_z * x112;
	FLT x115 = -x105 + x106 + x108 * x111 + x112 * x113 + x114 * x27;
	FLT x116 = obj_qk * x35;
	FLT x117 = obj_qj * x28;
	FLT x118 = -2 * x17;
	FLT x119 = sensor_x * (x110 + x118);
	FLT x120 = sensor_y * x112;
	FLT x121 = x108 * x119 + x114 * x38 - x116 + x117 + x120 * x34;
	FLT x122 = x11 * x121;
	FLT x123 = x122 * x33;
	FLT x124 = obj_qj * x24;
	FLT x125 = obj_qi * x35;
	FLT x126 = sensor_z * (x109 + x118);
	FLT x127 = sensor_x * x46;
	FLT x128 = x108 * x126 + x112 * x127 + x120 * x47 - x124 + x125;
	FLT x129 = x11 * x128;
	FLT x130 = x129 * x44;
	FLT x131 = x115 * x13 + x123 + x130;
	FLT x132 = x128 * x99;
	FLT x133 = x11 * x115;
	FLT x134 = -x122 * x2 + x132 - x133 * x58;
	FLT x135 = x121 * x68;
	FLT x136 = x115 * x8;
	FLT x137 = x72 * x8;
	FLT x138 = -x102 * (-x121 * x9 + 2 * x132 - x136 * x58);
	FLT x139 = x129 * x72 + x133 * x70 + x135;
	FLT x140 =
		x134 * x88 + x139 * x87 - x79 * (x131 * x84 + x83 * (x138 - x80 * (x128 * x137 + 2 * x135 + x136 * x70)));
	FLT x141 = 4 * x19;
	FLT x142 = -obj_qi * x141;
	FLT x143 = obj_qi * x107;
	FLT x144 = 2 * x143;
	FLT x145 = obj_qw * x28;
	FLT x146 = sensor_z * x144;
	FLT x147 = sensor_y * (x142 - x144 * x16) + x113 * x144 + x124 - x145 + x146 * x27;
	FLT x148 = obj_qj * x35;
	FLT x149 = obj_qk * x28;
	FLT x150 = sensor_y * x144;
	FLT x151 = x119 * x143 + x146 * x38 + x148 + x149 + x150 * x34;
	FLT x152 = x11 * x151;
	FLT x153 = x152 * x33;
	FLT x154 = obj_qw * x35;
	FLT x155 = sensor_z * (x142 - x144 * x45) + x106 + x127 * x144 + x150 * x47 + x154;
	FLT x156 = x11 * x155;
	FLT x157 = x156 * x44;
	FLT x158 = x13 * x147 + x153 + x157;
	FLT x159 = x155 * x99;
	FLT x160 = x11 * x147;
	FLT x161 = -x152 * x2 + x159 - x160 * x58;
	FLT x162 = x151 * x68;
	FLT x163 = x147 * x8;
	FLT x164 = -x102 * (-x151 * x9 + 2 * x159 - x163 * x58);
	FLT x165 = x156 * x72 + x160 * x70 + x162;
	FLT x166 =
		x161 * x88 + x165 * x87 - x79 * (x158 * x84 + x83 * (x164 - x80 * (x137 * x155 + 2 * x162 + x163 * x70)));
	FLT x167 = obj_qi * x24;
	FLT x168 = obj_qj * x107;
	FLT x169 = 2 * x168;
	FLT x170 = sensor_z * x169;
	FLT x171 = x111 * x168 + x113 * x169 + x149 + x167 + x170 * x27;
	FLT x172 = -obj_qj * x141;
	FLT x173 = sensor_y * x169;
	FLT x174 = sensor_x * (-x169 * x18 + x172) + x125 + x145 + x170 * x38 + x173 * x34;
	FLT x175 = x11 * x174;
	FLT x176 = x175 * x33;
	FLT x177 = obj_qw * x24;
	FLT x178 = sensor_z * (-x169 * x45 + x172) + x116 + x127 * x169 + x173 * x47 - x177;
	FLT x179 = x11 * x178;
	FLT x180 = x179 * x44;
	FLT x181 = x13 * x171 + x176 + x180;
	FLT x182 = x178 * x99;
	FLT x183 = x11 * x171;
	FLT x184 = -x175 * x2 + x182 - x183 * x58;
	FLT x185 = x174 * x68;
	FLT x186 = x171 * x8;
	FLT x187 = -x102 * (-x174 * x9 + 2 * x182 - x186 * x58);
	FLT x188 = x179 * x72 + x183 * x70 + x185;
	FLT x189 =
		x184 * x88 + x188 * x87 - x79 * (x181 * x84 + x83 * (x187 - x80 * (x137 * x178 + 2 * x185 + x186 * x70)));
	FLT x190 = -obj_qk * x141;
	FLT x191 = obj_qk * x107;
	FLT x192 = 2 * x191;
	FLT x193 = sensor_z * x192;
	FLT x194 = sensor_y * (-x16 * x192 + x190) + x113 * x192 + x117 + x177 + x193 * x27;
	FLT x195 = sensor_y * x192;
	FLT x196 = sensor_x * (-x18 * x192 + x190) + x105 - x154 + x193 * x38 + x195 * x34;
	FLT x197 = x11 * x196;
	FLT x198 = x197 * x33;
	FLT x199 = x126 * x191 + x127 * x192 + x148 + x167 + x195 * x47;
	FLT x200 = x11 * x199;
	FLT x201 = x200 * x44;
	FLT x202 = x13 * x194 + x198 + x201;
	FLT x203 = x199 * x99;
	FLT x204 = x11 * x194;
	FLT x205 = -x197 * x2 + x203 - x204 * x58;
	FLT x206 = x196 * x68;
	FLT x207 = x194 * x8;
	FLT x208 = -x102 * (-x196 * x9 + 2 * x203 - x207 * x58);
	FLT x209 = x200 * x72 + x204 * x70 + x206;
	FLT x210 =
		x205 * x88 + x209 * x87 - x79 * (x202 * x84 + x83 * (x208 - x80 * (x137 * x199 + 2 * x206 + x207 * x70)));
	FLT x211 = 2 * x77;
	FLT x212 = x211 * x61;
	FLT x213 = -lh_px - x69 - x71 - x73;
	FLT x214 = x213 * x77;
	FLT x215 = curve_1 * atan2(x74, x61);
	FLT x216 = pow(x51, 2) + x62;
	FLT x217 = 1.0 / x216;
	FLT x218 = tan(tilt_1);
	FLT x219 = pow(-x217 * pow(x218, 2) * x75 + 1, -1.0 / 2.0);
	FLT x220 = x218 / sqrt(x216);
	FLT x221 = x11 * x51;
	FLT x222 = x218 * x74 / pow(x216, 3.0 / 2.0);
	FLT x223 = x217 * x86;
	FLT x224 = x11 * x223;
	FLT x225 = x217 * x51;
	FLT x226 = x11 * x225;
	FLT x227 = -x2 * x226 - x219 * (x220 * x68 + x222 * (x221 * x33 + x82)) - x224 * x33;
	FLT x228 = gibMag_1 * sin(gibPhase_1 - phase_1 - asin(x220 * x74) + atan2(x61, x51));
	FLT x229 = x61 * x77;
	FLT x230 = (1.0 / 2.0) * x51;
	FLT x231 = x11 * x220;
	FLT x232 = x12 - 1;
	FLT x233 = -x219 * (x222 * (-x230 * (x10 * x8 - 2) + x96) + x231 * x70) + x223 * x232 - x226 * x58;
	FLT x234 = x211 * x213;
	FLT x235 = -x219 * (x222 * (x103 + x221 * x44) + x231 * x72) - x224 * x44 + x225 * x99;
	FLT x236 = x115 * x232;
	FLT x237 = x134 * x225 - x219 * (x139 * x220 + x222 * (x138 - x230 * (-x101 * x128 - x121 * x65 + 2 * x236))) +
			   x223 * (-x123 - x130 + x236);
	FLT x238 = x147 * x232;
	FLT x239 = x161 * x225 - x219 * (x165 * x220 + x222 * (x164 - x230 * (-x101 * x155 - x151 * x65 + 2 * x238))) +
			   x223 * (-x153 - x157 + x238);
	FLT x240 = x171 * x232;
	FLT x241 = x184 * x225 - x219 * (x188 * x220 + x222 * (x187 - x230 * (-x101 * x178 - x174 * x65 + 2 * x240))) +
			   x223 * (-x176 - x180 + x240);
	FLT x242 = x194 * x232;
	FLT x243 = x205 * x225 - x219 * (x209 * x220 + x222 * (x208 - x230 * (-x101 * x199 - x196 * x65 + 2 * x242))) +
			   x223 * (-x198 - x201 + x242);
	*(out++) = x67 * (-x64 * x9 + x65 * x66) + x90 * x91 + x90;
	*(out++) = x67 * (x13 * x93 - x64 * x94) + x91 * x98 + x98;
	*(out++) = x104 * x91 + x104 + x67 * (x100 * x99 + x101 * x66);
	*(out++) = x140 * x91 + x140 + x67 * (x100 * x134 + x131 * x93);
	*(out++) = x166 * x91 + x166 + x67 * (x100 * x161 + x158 * x93);
	*(out++) = x189 * x91 + x189 + x67 * (x100 * x184 + x181 * x93);
	*(out++) = x210 * x91 + x210 + x67 * (x100 * x205 + x202 * x93);
	*(out++) = x215 * (x212 * x68 - x214 * x9) + x227 * x228 + x227;
	*(out++) = x215 * (-x214 * x94 + x229 * x70 * x8) + x228 * x233 + x233;
	*(out++) = x215 * (x137 * x229 + x234 * x99) + x228 * x235 + x235;
	*(out++) = x215 * (x134 * x234 + x139 * x212) + x228 * x237 + x237;
	*(out++) = x215 * (x161 * x234 + x165 * x212) + x228 * x239 + x239;
	*(out++) = x215 * (x184 * x234 + x188 * x212) + x228 * x241 + x241;
	*(out++) = x215 * (x205 * x234 + x209 * x212) + x228 * x243 + x243;
}

static inline void gen_reproject_axis_x_jac_obj_p(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh,
												  FLT phase_0, FLT tilt_0, FLT curve_0, FLT gibPhase_0, FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = lh_qi * lh_qk;
	FLT x1 = lh_qj * lh_qw;
	FLT x2 = x0 - x1;
	FLT x3 = pow(lh_qi, 2);
	FLT x4 = pow(lh_qj, 2);
	FLT x5 = pow(lh_qk, 2);
	FLT x6 = x4 + x5;
	FLT x7 = sqrt(pow(lh_qw, 2) + x3 + x6);
	FLT x8 = 4 * x7;
	FLT x9 = x2 * x8;
	FLT x10 = 2 * x7;
	FLT x11 = -x10 * (x3 + x5) + 1;
	FLT x12 = pow(obj_qi, 2);
	FLT x13 = pow(obj_qk, 2);
	FLT x14 = x12 + x13;
	FLT x15 = pow(obj_qj, 2);
	FLT x16 = x13 + x15;
	FLT x17 = sqrt(pow(obj_qw, 2) + x12 + x16);
	FLT x18 = 2 * x17;
	FLT x19 = obj_qi * obj_qj;
	FLT x20 = obj_qk * obj_qw;
	FLT x21 = x19 + x20;
	FLT x22 = sensor_x * x18;
	FLT x23 = obj_qj * obj_qk;
	FLT x24 = obj_qi * obj_qw;
	FLT x25 = x23 - x24;
	FLT x26 = sensor_z * x18;
	FLT x27 = obj_py + sensor_y * (-x14 * x18 + 1) + x21 * x22 + x25 * x26;
	FLT x28 = x11 * x27;
	FLT x29 = lh_qi * lh_qj;
	FLT x30 = lh_qk * lh_qw;
	FLT x31 = x29 + x30;
	FLT x32 = x19 - x20;
	FLT x33 = sensor_y * x18;
	FLT x34 = obj_qi * obj_qk;
	FLT x35 = obj_qj * obj_qw;
	FLT x36 = x34 + x35;
	FLT x37 = obj_px + sensor_x * (-x16 * x18 + 1) + x26 * x36 + x32 * x33;
	FLT x38 = x10 * x37;
	FLT x39 = x31 * x38;
	FLT x40 = lh_qj * lh_qk;
	FLT x41 = lh_qi * lh_qw;
	FLT x42 = x40 - x41;
	FLT x43 = x12 + x15;
	FLT x44 = x34 - x35;
	FLT x45 = x23 + x24;
	FLT x46 = obj_pz + sensor_z * (-x18 * x43 + 1) + x22 * x44 + x33 * x45;
	FLT x47 = x10 * x46;
	FLT x48 = x42 * x47;
	FLT x49 = lh_py + x28 + x39 + x48;
	FLT x50 = pow(x49, 2);
	FLT x51 = x3 + x4;
	FLT x52 = x10 * x51;
	FLT x53 = x46 * (-x52 + 1);
	FLT x54 = x2 * x38;
	FLT x55 = x40 + x41;
	FLT x56 = x10 * x27;
	FLT x57 = x55 * x56;
	FLT x58 = -lh_pz - x53 - x54 - x57;
	FLT x59 = pow(x58, 2);
	FLT x60 = 1.0 / (x50 + x59);
	FLT x61 = -lh_py - x28 - x39 - x48;
	FLT x62 = x60 * x61;
	FLT x63 = x58 * x60 * x8;
	FLT x64 = curve_0 * atan2(x49, x58);
	FLT x65 = -x10 * x6 + 1;
	FLT x66 = x29 - x30;
	FLT x67 = x0 + x1;
	FLT x68 = lh_px + x37 * x65 + x47 * x67 + x56 * x66;
	FLT x69 = x59 + pow(x68, 2);
	FLT x70 = 1.0 / x69;
	FLT x71 = tan(tilt_0);
	FLT x72 = pow(-x50 * x70 * pow(x71, 2) + 1, -1.0 / 2.0);
	FLT x73 = (1.0 / 2.0) * x68;
	FLT x74 = x10 * x58;
	FLT x75 = x49 * x71 / pow(x69, 3.0 / 2.0);
	FLT x76 = x71 / sqrt(x69);
	FLT x77 = x10 * x76;
	FLT x78 = x70 * (lh_pz + x53 + x54 + x57);
	FLT x79 = x68 * x70;
	FLT x80 = x10 * x79;
	FLT x81 = -x2 * x80 + x65 * x78 - x72 * (x31 * x77 + x75 * (x2 * x74 - x73 * (-x6 * x8 + 2)));
	FLT x82 = gibMag_0 * sin(gibPhase_0 - phase_0 - asin(x49 * x76) + atan2(x58, x68));
	FLT x83 = 2 * x60;
	FLT x84 = x58 * x83;
	FLT x85 = x10 * x68;
	FLT x86 = x10 * x78;
	FLT x87 = -x55 * x80 + x66 * x86 - x72 * (x11 * x76 + x75 * (x55 * x74 - x66 * x85));
	FLT x88 = x52 - 1;
	FLT x89 = x61 * x83;
	FLT x90 = (1.0 / 2.0) * x58;
	FLT x91 = x67 * x86 - x72 * (x42 * x77 + x75 * (-x67 * x85 - x90 * (x51 * x8 - 2))) + x79 * x88;
	FLT x92 = obj_qi * x26;
	FLT x93 = obj_qk * x22;
	FLT x94 = 1.0 / x17;
	FLT x95 = obj_qw * x94;
	FLT x96 = -2 * x12;
	FLT x97 = -2 * x13;
	FLT x98 = sensor_y * (x96 + x97);
	FLT x99 = 2 * x95;
	FLT x100 = sensor_x * x21;
	FLT x101 = sensor_z * x99;
	FLT x102 = x100 * x99 + x101 * x25 - x92 + x93 + x95 * x98;
	FLT x103 = obj_qk * x33;
	FLT x104 = obj_qj * x26;
	FLT x105 = -2 * x15;
	FLT x106 = sensor_x * (x105 + x97);
	FLT x107 = sensor_y * x99;
	FLT x108 = x101 * x36 - x103 + x104 + x106 * x95 + x107 * x32;
	FLT x109 = x10 * x108;
	FLT x110 = obj_qj * x22;
	FLT x111 = obj_qi * x33;
	FLT x112 = sensor_z * (x105 + x96);
	FLT x113 = sensor_x * x44;
	FLT x114 = x107 * x45 - x110 + x111 + x112 * x95 + x113 * x99;
	FLT x115 = x10 * x114;
	FLT x116 = x102 * x11 + x109 * x31 + x115 * x42;
	FLT x117 = x114 * x88;
	FLT x118 = x10 * x102;
	FLT x119 = -x109 * x2 + x117 - x118 * x55;
	FLT x120 = x108 * x65;
	FLT x121 = x102 * x8;
	FLT x122 = x67 * x8;
	FLT x123 = x119 * x79 -
			   x72 * (x116 * x76 + x75 * (-x73 * (x114 * x122 + 2 * x120 + x121 * x66) -
										  x90 * (-x108 * x9 + 2 * x117 - x121 * x55))) +
			   x78 * (x115 * x67 + x118 * x66 + x120);
	FLT x124 = 4 * x17;
	FLT x125 = -obj_qi * x124;
	FLT x126 = obj_qi * x94;
	FLT x127 = 2 * x126;
	FLT x128 = obj_qw * x26;
	FLT x129 = sensor_z * x127;
	FLT x130 = sensor_y * (x125 - x127 * x14) + x100 * x127 + x110 - x128 + x129 * x25;
	FLT x131 = obj_qj * x33;
	FLT x132 = obj_qk * x26;
	FLT x133 = sensor_y * x127;
	FLT x134 = x106 * x126 + x129 * x36 + x131 + x132 + x133 * x32;
	FLT x135 = x10 * x134;
	FLT x136 = obj_qw * x33;
	FLT x137 = sensor_z * (x125 - x127 * x43) + x113 * x127 + x133 * x45 + x136 + x93;
	FLT x138 = x10 * x137;
	FLT x139 = x11 * x130 + x135 * x31 + x138 * x42;
	FLT x140 = x137 * x88;
	FLT x141 = x10 * x130;
	FLT x142 = -x135 * x2 + x140 - x141 * x55;
	FLT x143 = x134 * x65;
	FLT x144 = x130 * x8;
	FLT x145 = x142 * x79 -
			   x72 * (x139 * x76 + x75 * (-x73 * (x122 * x137 + 2 * x143 + x144 * x66) -
										  x90 * (-x134 * x9 + 2 * x140 - x144 * x55))) +
			   x78 * (x138 * x67 + x141 * x66 + x143);
	FLT x146 = obj_qi * x22;
	FLT x147 = obj_qj * x94;
	FLT x148 = 2 * x147;
	FLT x149 = sensor_z * x148;
	FLT x150 = x100 * x148 + x132 + x146 + x147 * x98 + x149 * x25;
	FLT x151 = -obj_qj * x124;
	FLT x152 = sensor_y * x148;
	FLT x153 = sensor_x * (-x148 * x16 + x151) + x111 + x128 + x149 * x36 + x152 * x32;
	FLT x154 = x10 * x153;
	FLT x155 = obj_qw * x22;
	FLT x156 = sensor_z * (-x148 * x43 + x151) + x103 + x113 * x148 + x152 * x45 - x155;
	FLT x157 = x10 * x156;
	FLT x158 = x11 * x150 + x154 * x31 + x157 * x42;
	FLT x159 = x156 * x88;
	FLT x160 = x10 * x150;
	FLT x161 = -x154 * x2 + x159 - x160 * x55;
	FLT x162 = x153 * x65;
	FLT x163 = x150 * x8;
	FLT x164 = x161 * x79 -
			   x72 * (x158 * x76 + x75 * (-x73 * (x122 * x156 + 2 * x162 + x163 * x66) -
										  x90 * (-x153 * x9 + 2 * x159 - x163 * x55))) +
			   x78 * (x157 * x67 + x160 * x66 + x162);
	FLT x165 = -obj_qk * x124;
	FLT x166 = obj_qk * x94;
	FLT x167 = 2 * x166;
	FLT x168 = sensor_z * x167;
	FLT x169 = sensor_y * (-x14 * x167 + x165) + x100 * x167 + x104 + x155 + x168 * x25;
	FLT x170 = sensor_y * x167;
	FLT x171 = sensor_x * (-x16 * x167 + x165) - x136 + x168 * x36 + x170 * x32 + x92;
	FLT x172 = x10 * x171;
	FLT x173 = x112 * x166 + x113 * x167 + x131 + x146 + x170 * x45;
	FLT x174 = x10 * x173;
	FLT x175 = x11 * x169 + x172 * x31 + x174 * x42;
	FLT x176 = x173 * x88;
	FLT x177 = x10 * x169;
	FLT x178 = -x172 * x2 + x176 - x177 * x55;
	FLT x179 = x171 * x65;
	FLT x180 = x169 * x8;
	FLT x181 = x178 * x79 -
			   x72 * (x175 * x76 + x75 * (-x73 * (x122 * x173 + 2 * x179 + x180 * x66) -
										  x90 * (-x171 * x9 + 2 * x176 - x180 * x55))) +
			   x78 * (x174 * x67 + x177 * x66 + x179);
	*(out++) = x64 * (x31 * x63 - x62 * x9) + x81 * x82 + x81;
	*(out++) = x64 * (x11 * x84 - x55 * x62 * x8) + x82 * x87 + x87;
	*(out++) = x64 * (x42 * x63 + x88 * x89) + x82 * x91 + x91;
	*(out++) = x123 * x82 + x123 + x64 * (x116 * x84 + x119 * x89);
	*(out++) = x145 * x82 + x145 + x64 * (x139 * x84 + x142 * x89);
	*(out++) = x164 * x82 + x164 + x64 * (x158 * x84 + x161 * x89);
	*(out++) = x181 * x82 + x181 + x64 * (x175 * x84 + x178 * x89);
}

static inline void gen_reproject_axis_y_jac_obj_p(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh,
												  FLT phase_0, FLT tilt_0, FLT curve_0, FLT gibPhase_0, FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = pow(lh_qj, 2);
	FLT x1 = pow(lh_qk, 2);
	FLT x2 = pow(lh_qi, 2);
	FLT x3 = x1 + x2;
	FLT x4 = sqrt(pow(lh_qw, 2) + x0 + x3);
	FLT x5 = 2 * x4;
	FLT x6 = -x5 * (x0 + x1) + 1;
	FLT x7 = x0 + x2;
	FLT x8 = x5 * x7;
	FLT x9 = pow(obj_qi, 2);
	FLT x10 = pow(obj_qj, 2);
	FLT x11 = x10 + x9;
	FLT x12 = pow(obj_qk, 2);
	FLT x13 = x12 + x9;
	FLT x14 = sqrt(pow(obj_qw, 2) + x10 + x13);
	FLT x15 = 2 * x14;
	FLT x16 = obj_qi * obj_qk;
	FLT x17 = obj_qj * obj_qw;
	FLT x18 = x16 - x17;
	FLT x19 = sensor_x * x15;
	FLT x20 = obj_qi * obj_qw;
	FLT x21 = obj_qj * obj_qk;
	FLT x22 = x20 + x21;
	FLT x23 = sensor_y * x15;
	FLT x24 = obj_pz + sensor_z * (-x11 * x15 + 1) + x18 * x19 + x22 * x23;
	FLT x25 = x24 * (-x8 + 1);
	FLT x26 = lh_qi * lh_qk;
	FLT x27 = lh_qj * lh_qw;
	FLT x28 = x26 - x27;
	FLT x29 = x10 + x12;
	FLT x30 = obj_qi * obj_qj;
	FLT x31 = obj_qk * obj_qw;
	FLT x32 = x30 - x31;
	FLT x33 = x16 + x17;
	FLT x34 = sensor_z * x15;
	FLT x35 = obj_px + sensor_x * (-x15 * x29 + 1) + x23 * x32 + x33 * x34;
	FLT x36 = x35 * x5;
	FLT x37 = x28 * x36;
	FLT x38 = lh_qi * lh_qw;
	FLT x39 = lh_qj * lh_qk;
	FLT x40 = x38 + x39;
	FLT x41 = x30 + x31;
	FLT x42 = -x20 + x21;
	FLT x43 = obj_py + sensor_y * (-x13 * x15 + 1) + x19 * x41 + x34 * x42;
	FLT x44 = x43 * x5;
	FLT x45 = x40 * x44;
	FLT x46 = -lh_pz - x25 - x37 - x45;
	FLT x47 = x35 * x6;
	FLT x48 = lh_qi * lh_qj;
	FLT x49 = lh_qk * lh_qw;
	FLT x50 = x48 - x49;
	FLT x51 = x44 * x50;
	FLT x52 = x26 + x27;
	FLT x53 = x24 * x5;
	FLT x54 = x52 * x53;
	FLT x55 = lh_px + x47 + x51 + x54;
	FLT x56 = pow(x55, 2);
	FLT x57 = pow(x46, 2);
	FLT x58 = 1.0 / (x56 + x57);
	FLT x59 = 2 * x58;
	FLT x60 = x46 * x59;
	FLT x61 = 4 * x4;
	FLT x62 = -lh_px - x47 - x51 - x54;
	FLT x63 = x58 * x62;
	FLT x64 = curve_0 * atan2(x55, x46);
	FLT x65 = x3 * x5;
	FLT x66 = x48 + x49;
	FLT x67 = -x38 + x39;
	FLT x68 = -lh_py - x36 * x66 - x43 * (-x65 + 1) - x53 * x67;
	FLT x69 = x57 + pow(x68, 2);
	FLT x70 = 1.0 / x69;
	FLT x71 = tan(tilt_0);
	FLT x72 = pow(-x56 * x70 * pow(x71, 2) + 1, -1.0 / 2.0);
	FLT x73 = x71 / sqrt(x69);
	FLT x74 = x5 * x68;
	FLT x75 = x46 * x5;
	FLT x76 = x55 * x71 / pow(x69, 3.0 / 2.0);
	FLT x77 = x70 * (lh_pz + x25 + x37 + x45);
	FLT x78 = x5 * x77;
	FLT x79 = x68 * x70;
	FLT x80 = x5 * x79;
	FLT x81 = -x28 * x80 - x66 * x78 - x72 * (x6 * x73 + x76 * (x28 * x75 + x66 * x74));
	FLT x82 = gibMag_0 * sin(gibPhase_0 - phase_0 - asin(x55 * x73) + atan2(x46, x68));
	FLT x83 = x40 * x61;
	FLT x84 = x46 * x58 * x61;
	FLT x85 = (1.0 / 2.0) * x68;
	FLT x86 = x5 * x73;
	FLT x87 = x65 - 1;
	FLT x88 = -x40 * x80 - x72 * (x50 * x86 + x76 * (x40 * x75 - x85 * (x3 * x61 - 2))) + x77 * x87;
	FLT x89 = x8 - 1;
	FLT x90 = x59 * x62;
	FLT x91 = (1.0 / 2.0) * x46;
	FLT x92 = -x67 * x78 - x72 * (x52 * x86 + x76 * (x67 * x74 - x91 * (x61 * x7 - 2))) + x79 * x89;
	FLT x93 = obj_qk * x23;
	FLT x94 = obj_qj * x34;
	FLT x95 = 1.0 / x14;
	FLT x96 = obj_qw * x95;
	FLT x97 = -2 * x10;
	FLT x98 = -2 * x12;
	FLT x99 = sensor_x * (x97 + x98);
	FLT x100 = 2 * x96;
	FLT x101 = sensor_y * x32;
	FLT x102 = sensor_z * x100;
	FLT x103 = x100 * x101 + x102 * x33 - x93 + x94 + x96 * x99;
	FLT x104 = obj_qi * x34;
	FLT x105 = obj_qk * x19;
	FLT x106 = -2 * x9;
	FLT x107 = sensor_y * (x106 + x98);
	FLT x108 = sensor_x * x100;
	FLT x109 = x102 * x42 - x104 + x105 + x107 * x96 + x108 * x41;
	FLT x110 = x109 * x5;
	FLT x111 = obj_qj * x19;
	FLT x112 = obj_qi * x23;
	FLT x113 = sensor_z * (x106 + x97);
	FLT x114 = sensor_y * x22;
	FLT x115 = x100 * x114 + x108 * x18 - x111 + x112 + x113 * x96;
	FLT x116 = x115 * x5;
	FLT x117 = x103 * x6 + x110 * x50 + x116 * x52;
	FLT x118 = x115 * x89;
	FLT x119 = x103 * x5;
	FLT x120 = -x110 * x40 + x118 - x119 * x28;
	FLT x121 = x103 * x61;
	FLT x122 = x109 * x87;
	FLT x123 = x61 * x67;
	FLT x124 = x120 * x79 -
			   x72 * (x117 * x73 + x76 * (-x85 * (-x115 * x123 - x121 * x66 + 2 * x122) -
										  x91 * (-x109 * x83 + 2 * x118 - x121 * x28))) +
			   x77 * (-x116 * x67 - x119 * x66 + x122);
	FLT x125 = obj_qj * x23;
	FLT x126 = obj_qk * x34;
	FLT x127 = obj_qi * x95;
	FLT x128 = 2 * x127;
	FLT x129 = sensor_z * x128;
	FLT x130 = x101 * x128 + x125 + x126 + x127 * x99 + x129 * x33;
	FLT x131 = 4 * x14;
	FLT x132 = -obj_qi * x131;
	FLT x133 = obj_qw * x34;
	FLT x134 = sensor_x * x128;
	FLT x135 = sensor_y * (-x128 * x13 + x132) + x111 + x129 * x42 - x133 + x134 * x41;
	FLT x136 = x135 * x5;
	FLT x137 = obj_qw * x23;
	FLT x138 = sensor_z * (-x11 * x128 + x132) + x105 + x114 * x128 + x134 * x18 + x137;
	FLT x139 = x138 * x5;
	FLT x140 = x130 * x6 + x136 * x50 + x139 * x52;
	FLT x141 = x138 * x89;
	FLT x142 = x130 * x5;
	FLT x143 = -x136 * x40 + x141 - x142 * x28;
	FLT x144 = x130 * x61;
	FLT x145 = x135 * x87;
	FLT x146 = x143 * x79 -
			   x72 * (x140 * x73 + x76 * (-x85 * (-x123 * x138 - x144 * x66 + 2 * x145) -
										  x91 * (-x135 * x83 + 2 * x141 - x144 * x28))) +
			   x77 * (-x139 * x67 - x142 * x66 + x145);
	FLT x147 = -obj_qj * x131;
	FLT x148 = obj_qj * x95;
	FLT x149 = 2 * x148;
	FLT x150 = sensor_z * x149;
	FLT x151 = sensor_x * (x147 - x149 * x29) + x101 * x149 + x112 + x133 + x150 * x33;
	FLT x152 = obj_qi * x19;
	FLT x153 = sensor_x * x149;
	FLT x154 = x107 * x148 + x126 + x150 * x42 + x152 + x153 * x41;
	FLT x155 = x154 * x5;
	FLT x156 = obj_qw * x19;
	FLT x157 = sensor_z * (-x11 * x149 + x147) + x114 * x149 + x153 * x18 - x156 + x93;
	FLT x158 = x157 * x5;
	FLT x159 = x151 * x6 + x155 * x50 + x158 * x52;
	FLT x160 = x157 * x89;
	FLT x161 = x151 * x5;
	FLT x162 = -x155 * x40 + x160 - x161 * x28;
	FLT x163 = x151 * x61;
	FLT x164 = x154 * x87;
	FLT x165 = x162 * x79 -
			   x72 * (x159 * x73 + x76 * (-x85 * (-x123 * x157 - x163 * x66 + 2 * x164) -
										  x91 * (-x154 * x83 + 2 * x160 - x163 * x28))) +
			   x77 * (-x158 * x67 - x161 * x66 + x164);
	FLT x166 = -obj_qk * x131;
	FLT x167 = obj_qk * x95;
	FLT x168 = 2 * x167;
	FLT x169 = sensor_z * x168;
	FLT x170 = sensor_x * (x166 - x168 * x29) + x101 * x168 + x104 - x137 + x169 * x33;
	FLT x171 = sensor_x * x168;
	FLT x172 = sensor_y * (-x13 * x168 + x166) + x156 + x169 * x42 + x171 * x41 + x94;
	FLT x173 = x172 * x5;
	FLT x174 = x113 * x167 + x114 * x168 + x125 + x152 + x171 * x18;
	FLT x175 = x174 * x5;
	FLT x176 = x170 * x6 + x173 * x50 + x175 * x52;
	FLT x177 = x174 * x89;
	FLT x178 = x170 * x5;
	FLT x179 = -x173 * x40 + x177 - x178 * x28;
	FLT x180 = x170 * x61;
	FLT x181 = x172 * x87;
	FLT x182 = x179 * x79 -
			   x72 * (x176 * x73 + x76 * (-x85 * (-x123 * x174 - x180 * x66 + 2 * x181) -
										  x91 * (-x172 * x83 + 2 * x177 - x180 * x28))) +
			   x77 * (-x175 * x67 - x178 * x66 + x181);
	*(out++) = x64 * (-x28 * x61 * x63 + x6 * x60) + x81 * x82 + x81;
	*(out++) = x64 * (x50 * x84 - x63 * x83) + x82 * x88 + x88;
	*(out++) = x64 * (x52 * x84 + x89 * x90) + x82 * x92 + x92;
	*(out++) = x124 * x82 + x124 + x64 * (x117 * x60 + x120 * x90);
	*(out++) = x146 * x82 + x146 + x64 * (x140 * x60 + x143 * x90);
	*(out++) = x165 * x82 + x165 + x64 * (x159 * x60 + x162 * x90);
	*(out++) = x182 * x82 + x182 + x64 * (x176 * x60 + x179 * x90);
}

